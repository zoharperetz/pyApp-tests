version: 2.1

jobs:
  build-test:
    docker:
      - image: circleci/python
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build Docker Image
          command: |
            docker build -t myimage:latest .
      - run:
          name: Run & Test
          command: |
            docker run -dit --name=myapp myimage:latest 
            docker exec myapp python testApp.py &> test-results.txt
            cat test-results.txt
      - store_test_results:
          path: test-results.txt
      - run:
          name: Send Test Results
          command: |
            cat test-results.txt
      - run:
          name: push image
          command: |
            docker login -u zoharperets -p $DOCKERHUB_PASS
            docker tag myimage:latest zoharperets/weatherapp:$CIRCLE_BUILD_NUM
            docker push zoharperets/weatherapp:$CIRCLE_BUILD_NUM
  terraform-tests:
    working_directory: ~/project/gitops-repo
    docker:
      - image: ubuntu:latest
    steps:
      - run:
          name: Setup
          command: |
            apt update
            apt install curl
            curl -fsSL https://golang.org/dl/go1.17.6.linux-amd64.tar.gz -o go.tar.gz
            tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz
            export PATH=$PATH:/usr/local/go/bin
            curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
            apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            apt update && apt install terraform
      - run:
          name: Clone Repo
          command: |
            git clone https://zoharperetz:$GITHUB_TOKEN@github.com/zoharperetz/prod.git
      - run:
          name: Run Terratest
          command: |
            ls -a
            cd prod/test
            pwd
            go mod init test_eks
            go mod tidy
            go test -v 


 

workflows:
  build-test-deploy:
    jobs:
      - build-test
      - terraform-tests:
          requires:
            - build-test
     
      

